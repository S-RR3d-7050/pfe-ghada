// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

#nullable disable

namespace WebApi.Migrations.SqlServerMigrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240425093413_Release02")]
    partial class Release02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.Entities.Admission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Chambre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePEC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Désignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MédecinCorrespondantId")
                        .HasColumnType("int");

                    b.Property<int>("MédecinTraitantId")
                        .HasColumnType("int");

                    b.Property<int>("NumPEC")
                        .HasColumnType("int");

                    b.Property<string>("Période")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SJour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Société")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dossierPatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MédecinCorrespondantId");

                    b.HasIndex("MédecinTraitantId");

                    b.HasIndex("dossierPatientId");

                    b.ToTable("Admissions");
                });

            modelBuilder.Entity("WebApi.Entities.DossierPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdrChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseLocale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatCIN")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatNai")
                        .HasColumnType("datetime2");

                    b.Property<string>("Délégation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empreinte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gouvernorat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationnalité")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumCIN")
                        .HasColumnType("int");

                    b.Property<string>("PatientPEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomPere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prestataire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Traite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypPCE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DossierPatients");
                });

            modelBuilder.Entity("WebApi.Entities.EmploiDuTemps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateEmploi")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HDebutApMidi")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HDébutMatinée")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HDébutSoir")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HFinApMidi")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HFinMatinée")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HFinSoir")
                        .HasColumnType("time");

                    b.Property<int>("KinéId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KinéId");

                    b.ToTable("EmploiDuTemps");
                });

            modelBuilder.Entity("WebApi.Entities.RendezVous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Désignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MédecinCorrespondantId")
                        .HasColumnType("int");

                    b.Property<int>("MédecinTraitantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateRDV")
                        .HasColumnType("datetime2");

                    b.Property<int>("dossierPatientId")
                        .HasColumnType("int");

                    b.Property<int>("heureRDV")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MédecinCorrespondantId");

                    b.HasIndex("MédecinTraitantId");

                    b.HasIndex("dossierPatientId");

                    b.ToTable("RendezVous");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.Entities.Admission", b =>
                {
                    b.HasOne("WebApi.Entities.User", "MédecinCorrespondant")
                        .WithMany()
                        .HasForeignKey("MédecinCorrespondantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "MédecinTraitant")
                        .WithMany()
                        .HasForeignKey("MédecinTraitantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.DossierPatient", "dossierPatient")
                        .WithMany()
                        .HasForeignKey("dossierPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MédecinCorrespondant");

                    b.Navigation("MédecinTraitant");

                    b.Navigation("dossierPatient");
                });

            modelBuilder.Entity("WebApi.Entities.EmploiDuTemps", b =>
                {
                    b.HasOne("WebApi.Entities.User", "Kiné")
                        .WithMany()
                        .HasForeignKey("KinéId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kiné");
                });

            modelBuilder.Entity("WebApi.Entities.RendezVous", b =>
                {
                    b.HasOne("WebApi.Entities.User", "MédecinCorrespondant")
                        .WithMany()
                        .HasForeignKey("MédecinCorrespondantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "MédecinTraitant")
                        .WithMany()
                        .HasForeignKey("MédecinTraitantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.DossierPatient", "dossierPatient")
                        .WithMany()
                        .HasForeignKey("dossierPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MédecinCorrespondant");

                    b.Navigation("MédecinTraitant");

                    b.Navigation("dossierPatient");
                });
#pragma warning restore 612, 618
        }
    }
}
